(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{166:function(e,t,n){"use strict";n.r(t);var i=n(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("This document is designed to be a reference for any person wishing to implement or any person interested in the architecture of the Notification system. This document describes architecture and sub-architecture with their associated interfaces, database schemas, and the motivations behind the chosen design. Both high-level and low-level designs are included in this document.")]),e._v(" "),n("p",[e._v("This document should be read by an individual with a technical background and has experience reading data flow diagrams (DFDs), control flow diagrams (CFDs), interface designs, and development experience in object-oriented programming and event driven programming.")]),e._v(" "),n("p",[e._v("The ability to notify user(s) of new events represents an essential function of a Notification system. Most traditional systems rely on the demand-driven (or request-reply) model to query or poll databases for new data. However, the ubiquitous presence of asynchronous events warrants the elaboration of a general notification system as one of the core components of an information management architecture.")])])}],!1,null,null,null);t.default=a.exports}}]);